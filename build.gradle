/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Mathias' at '29.01.16 18:29' with Gradle 2.9
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.9/userguide/tutorial_java_projects.html
 */
buildscript {
    dependencies {
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.11'
    }
}

plugins {
    // Asciidoctor
    // http://asciidoctor.org/
    id 'org.asciidoctor.convert' version '1.5.3'

}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
//    mavenCentral()
}

// ############################################################################
// Allgemeine Definitionen
String  copyRight   = '(C) 2017 TeamBaltic'
// ############################################################################

// ############################################################################
// Kopieren der Artifakte in lokales Verzeichnis
def adocs         = file("build/docs//html5")

task copyArtifacts(type: Copy, dependsOn: 'asciidoctor' ) {
    from files( adocs )
    into "html"
}
configure(copyArtifacts) {
    group = 'documentation'
    description = 'Kopiert alle html-Dateien ins Root-Verzeichnis'
}
// ############################################################################

// ############################################################################
// Dokumentation mit Asciidoctor
asciidoctor {
    backends 'pdf','html5'
    attributes \
        'pdf-stylesdir' : 'theme',
        'pdf-style'     : 'custom',
        'stylesdir'     : '../stylesheets',
        'stylesheet'    : 'riak.css'
//        'stylesheet'    : 'readthedocs.css'
    
    sourceDir = file('.')
    sourceDir = file('adocs')
    sources {
      include '*.adoc'
    }
    
    outputDir  = file('build/docs')
}

task insertMenu(dependsOn: 'copyArtifacts') << {
    File menuFile     = project.file('html/menu_files/menu.html')
    def filesToAddMenuTo = []
    filesToAddMenuTo.add( project.file('html/Colophon.html') )
    filesToAddMenuTo.add( project.file('html/Layout.html') )
    filesToAddMenuTo.add( project.file('html/DruckUndVersand.html') )
    filesToAddMenuTo.add( project.file('html/Redaktionsarbeit.html') )
    filesToAddMenuTo.add( project.file('html/Software.html') )
    
    def aMenuInserter = new MenuInserter( project.file('html'), menuFile )
    aMenuInserter.insertMenu()
}
configure(insertMenu) {
    group = 'documentation'
    description = 'FÃ¼gt ein Menu in alle html-Dateien ein'
}

// ############################################################################
